{"version":3,"file":"LayerMenu.js","sources":["LayerMenu.js"],"names":["define","declare","Menu","MenuItem","PopupMenuItem","MenuSeparator","Transparency","i18n","control","_removed","postCreate","this","inherited","arguments","layer","controlOptions","controller","layerType","_layerType","menu","vectorReorder","overlayReorder","_reorderUp","label","moveUp","onClick","_moveUp","addChild","_reorderDown","moveDown","_moveDown","_dynamicToggleMenuItems","noZoom","zoomTo","_zoomToLayer","noTransparency","transparency","swipe","swipeMenu","layerSwipeVertical","_swipeLayer","layerSwipeHorizontal","swipeScope","layerSwipeScope","layerSwipe","popup","metadataUrl","url","metadata","window","open","lastChild","getChildren","length","isInstanceOf","removeChild"],"mappings":";;;;;AAAAA,QACI,qBACA,aACA,iBACA,sBACA,sBACA,iBACA,+BACD,SACCC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAON,GAAQC,GACXM,QAAS,KACTC,UAAU,EACVC,WAAY,WACRC,KAAKC,UAAUC,UACf,IAAIL,GAAUG,KAAKH,QACfM,EAAQN,EAAQM,MAChBC,EAAiBP,EAAQO,eACzBC,EAAaR,EAAQQ,WACrBC,EAAYT,EAAQU,WACpBC,EAAOR,IAwCX,KAtCmB,WAAdM,GAA0BD,EAAWI,eAAiC,YAAdH,GAA2BD,EAAWK,kBAC/Fb,EAAQc,WAAa,GAAInB,IACrBoB,MAAOhB,EAAKiB,OACZC,QAAS,WACLT,EAAWU,QAAQlB,MAG3BW,EAAKQ,SAASnB,EAAQc,YACtBd,EAAQoB,aAAe,GAAIzB,IACvBoB,MAAOhB,EAAKsB,SACZJ,QAAS,WACLT,EAAWc,UAAUtB,MAG7BW,EAAKQ,SAASnB,EAAQoB,cACtBT,EAAKQ,SAAS,GAAItB,KAGlBG,EAAQuB,yBACRvB,EAAQuB,wBAAwBZ,IAG/BJ,EAAeiB,UAAW,GAAQhB,EAAWgB,UAAW,GAAUhB,EAAWgB,UAAW,GAAQjB,EAAeiB,UAAW,IAC3Hb,EAAKQ,SAAS,GAAIxB,IACdoB,MAAOhB,EAAK0B,OACZR,QAAS,WACLT,EAAWkB,aAAapB,QAK/BC,EAAeoB,kBAAmB,GAAQnB,EAAWmB,kBAAmB,GAAUnB,EAAWmB,kBAAmB,GAAQpB,EAAeoB,kBAAmB,IAC3JhB,EAAKQ,SAAS,GAAIrB,IACdiB,MAAOhB,EAAK6B,aACZtB,MAAOA,KAIXC,EAAesB,SAAU,GAASrB,EAAWqB,SAAU,GAAQtB,EAAesB,SAAU,EAAQ,CAChG,GAAIC,GAAY,GAAIpC,EACpBoC,GAAUX,SAAS,GAAIxB,IACnBoB,MAAOhB,EAAKgC,mBACZd,QAAS,WACLT,EAAWwB,YAAY1B,EAAO,gBAGtCwB,EAAUX,SAAS,GAAIxB,IACnBoB,MAAOhB,EAAKkC,qBACZhB,QAAS,WACLT,EAAWwB,YAAY1B,EAAO,kBAGlCC,EAAe2B,cAAe,GAC9BJ,EAAUX,SAAS,GAAIxB,IACnBoB,MAAOhB,EAAKoC,gBACZlB,QAAS,WACLT,EAAWwB,YAAY1B,EAAO,aAI1CK,EAAKQ,SAAS,GAAIvB,IACdmB,MAAOhB,EAAKqC,WACZC,MAAOP,KAKXvB,EAAe+B,eAAgB,GAAQhC,EAAMiC,MAC7C5B,EAAKQ,SAAS,GAAItB,IAClBc,EAAKQ,SAAS,GAAIxB,IACdoB,MAAOhB,EAAKyC,SACZvB,QAAS,WACLwB,OAAOC,KAAKpC,EAAMiC,IAAK,eAK/BhC,EAAe+B,aAAqD,gBAA/B/B,GAAe+B,cACpD3B,EAAKQ,SAAS,GAAItB,IAClBc,EAAKQ,SAAS,GAAIxB,IACdoB,MAAOhB,EAAKyC,SACZvB,QAAS,WACLwB,OAAOC,KAAKnC,EAAe+B,YAAa,cAKpD,IAAIK,GAAYhC,EAAKiC,cAAcjC,EAAKiC,cAAcC,OAAS,EAC3DF,IAAaA,EAAUG,aAAajD,IACpCc,EAAKoC,YAAYJ","sourcesContent":["define([\n    'dojo/_base/declare',\n    'dijit/Menu',\n    'dijit/MenuItem',\n    'dijit/PopupMenuItem',\n    'dijit/MenuSeparator',\n    './Transparency',\n    'dojo/i18n!./../nls/resource'\n], function (\n    declare,\n    Menu,\n    MenuItem,\n    PopupMenuItem,\n    MenuSeparator,\n    Transparency,\n    i18n\n) {\n    return declare(Menu, {\n        control: null,\n        _removed: false, //for future use\n        postCreate: function () {\n            this.inherited(arguments);\n            var control = this.control,\n                layer = control.layer,\n                controlOptions = control.controlOptions,\n                controller = control.controller,\n                layerType = control._layerType,\n                menu = this;\n            //reorder menu items\n            if ((layerType === 'vector' && controller.vectorReorder) || (layerType === 'overlay' && controller.overlayReorder)) {\n                control._reorderUp = new MenuItem({\n                    label: i18n.moveUp,\n                    onClick: function () {\n                        controller._moveUp(control);\n                    }\n                });\n                menu.addChild(control._reorderUp);\n                control._reorderDown = new MenuItem({\n                    label: i18n.moveDown,\n                    onClick: function () {\n                        controller._moveDown(control);\n                    }\n                });\n                menu.addChild(control._reorderDown);\n                menu.addChild(new MenuSeparator());\n            }\n            // toggle all dynamic sublayers\n            if (control._dynamicToggleMenuItems) {\n                control._dynamicToggleMenuItems(menu);\n            }\n            //zoom to layer\n            if ((controlOptions.noZoom !== true && controller.noZoom !== true) || (controller.noZoom === true && controlOptions.noZoom === false)) {\n                menu.addChild(new MenuItem({\n                    label: i18n.zoomTo,\n                    onClick: function () {\n                        controller._zoomToLayer(layer);\n                    }\n                }));\n            }\n            //transparency\n            if ((controlOptions.noTransparency !== true && controller.noTransparency !== true) || (controller.noTransparency === true && controlOptions.noTransparency === false)) {\n                menu.addChild(new Transparency({\n                    label: i18n.transparency,\n                    layer: layer\n                }));\n            }\n            //layer swipe\n            if (controlOptions.swipe === true || (controller.swipe === true && controlOptions.swipe !== false)) {\n                var swipeMenu = new Menu();\n                swipeMenu.addChild(new MenuItem({\n                    label: i18n.layerSwipeVertical,\n                    onClick: function () {\n                        controller._swipeLayer(layer, 'vertical');\n                    }\n                }));\n                swipeMenu.addChild(new MenuItem({\n                    label: i18n.layerSwipeHorizontal,\n                    onClick: function () {\n                        controller._swipeLayer(layer, 'horizontal');\n                    }\n                }));\n                if (controlOptions.swipeScope === true) {\n                    swipeMenu.addChild(new MenuItem({\n                        label: i18n.layerSwipeScope,\n                        onClick: function () {\n                            controller._swipeLayer(layer, 'scope');\n                        }\n                    }));\n                }\n                menu.addChild(new PopupMenuItem({\n                    label: i18n.layerSwipe,\n                    popup: swipeMenu\n                }));\n            }\n            // metadata link\n            // service url\n            if (controlOptions.metadataUrl === true && layer.url) {\n                menu.addChild(new MenuSeparator());\n                menu.addChild(new MenuItem({\n                    label: i18n.metadata,\n                    onClick: function () {\n                        window.open(layer.url, '_blank');\n                    }\n                }));\n            }\n            // custom url\n            if (controlOptions.metadataUrl && typeof controlOptions.metadataUrl === 'string') {\n                menu.addChild(new MenuSeparator());\n                menu.addChild(new MenuItem({\n                    label: i18n.metadata,\n                    onClick: function () {\n                        window.open(controlOptions.metadataUrl, '_blank');\n                    }\n                }));\n            }\n            //if last child is a separator remove it\n            var lastChild = menu.getChildren()[menu.getChildren().length - 1];\n            if (lastChild && lastChild.isInstanceOf(MenuSeparator)) {\n                menu.removeChild(lastChild);\n            }\n        }\n    });\n});"]}